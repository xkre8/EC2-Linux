---
# Improved RPM Package Processing Playbook

- name: Validate and set package source path
  block:
    - name: Set source path for local package
      set_fact:
        package_source_path: "{{ package_item.source_dir | default(packages_dir, true) }}/{{ package_item.file }}"
      
    - name: Debug package source path
      debug:
        msg: "Attempting to install package from path: {{ package_source_path }}"

- name: Check if package file exists
  stat:
    path: "{{ package_source_path }}"
  register: package_file_check

- name: Detailed file existence check and error handling
  block:
    - name: List available files in source directory
      shell: "ls -l {{ package_item.source_dir | default(packages_dir, true) }}"
      register: directory_contents
      when: not package_file_check.stat.exists
      changed_when: false
      failed_when: false

    - name: Fail with detailed error if package file does not exist
      fail:
        msg: |
          ERROR: Package file not found!
          - Expected file: {{ package_item.file }}
          - Expected path: {{ package_source_path }}
          - Available files in directory:
          {{ directory_contents.stdout | default('No directory listing available') }}
      when: not package_file_check.stat.exists

- name: Check if package is already installed
  command: rpm -q {{ package_item.name }}
  register: rpm_check
  failed_when: false
  changed_when: false

- name: Import GPG key if provided
  rpm_key:
    key: "{{ package_item.gpg_key }}"
    state: present
  when: package_item.gpg_key is defined

- name: Install RPM package
  yum:
    name: "{{ package_source_path }}"
    state: present
    disable_gpg_check: "{{ package_item.disable_gpg_check | default(disable_gpg_check | default(false)) }}"
  register: rpm_install
  when: rpm_check.rc != 0
  
- name: Detailed package information gathering
  block:
    - name: Retrieve package details
      shell: |
        echo "===== PACKAGE INFORMATION ====="
        rpm -qi {{ package_item.name }} | grep -E 'Name|Version|Release|Description'
        echo ""
        echo "===== INSTALLED FILES ====="
        rpm -ql {{ package_item.name }} | head -10
        total_files=$(rpm -ql {{ package_item.name }} | wc -l)
        if [ $total_files -gt 10 ]; then
          echo "... and $(( $total_files - 10 )) more files"
        fi
      register: package_info
      changed_when: false
      when: rpm_check.rc != 0

    - name: Display package information
      debug:
        var: package_info.stdout_lines
      when: rpm_check.rc != 0 and package_info is defined

    - name: Version check
      block:
        - name: Run version check command
          shell: "{{ package_item.version_check_cmd }}"
          register: version_check
          changed_when: false
          failed_when: false
        
        - name: Display version
          debug:
            msg: "Version check for {{ package_item.name }}: {{ version_check.stdout }}"
          when: version_check.rc == 0
      when: package_item.version_check_cmd is defined

  when: show_detailed_output | bool