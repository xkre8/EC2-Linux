---
- name: Set source path for package
  set_fact:
    package_source_path: "{{ package_item.source_dir | default(packages[0].source_dir) }}/{{ package_item.file }}"

- name: Check if RPM file exists
  stat:
    path: "{{ package_source_path }}"
  register: rpm_file_check

- name: Fail if RPM file does not exist
  fail:
    msg: "RPM file {{ package_source_path }} does not exist!"
  when: not rpm_file_check.stat.exists

- name: Check if RPM is already installed
  command: rpm -q {{ package_item.name }}
  register: rpm_check
  failed_when: false
  changed_when: false

- name: Debug package information
  debug:
    msg: "Processing {{ package_item.name }} from {{ package_source_path }}"
  
- name: Install RPM package with rpm directly (no repo access)
  command: rpm -ivh --nodeps {{ package_source_path }}
  register: rpm_install
  failed_when: rpm_install.rc != 0 and 'is already installed' not in rpm_install.stderr
  changed_when: rpm_install.rc == 0
  when: rpm_check.rc != 0

- name: Get installed package information
  shell: |
    echo "===== PACKAGE INFORMATION ====="
    rpm -qi {{ package_item.name }} | grep -E 'Name|Version|Release|Description'
    echo ""
    echo "===== SERVICE STATUS ====="
    if systemctl list-unit-files | grep -q {{ package_item.name }}; then
      systemctl status {{ package_item.name }} 2>/dev/null || echo "Service exists but may not be running"
    else
      echo "No systemd service found for {{ package_item.name }}"
      # Try to check for other services that might have been installed by this RPM
      echo "Looking for related services..."
      rpm -ql {{ package_item.name }} | grep -E '\.service$' | while read service_file; do
        service_name=$(basename "$service_file")
        echo "Found service file: $service_name"
        systemctl status ${service_name} 2>/dev/null || echo "Service ${service_name} exists but may not be running"
      done
    fi
    echo ""
    echo "===== FILES INSTALLED ====="
    rpm -ql {{ package_item.name }} | head -10
    if [ $(rpm -ql {{ package_item.name }} | wc -l) -gt 10 ]; then
      echo "... and $(( $(rpm -ql {{ package_item.name }} | wc -l) - 10 )) more files"
    fi
    echo ""
  register: package_info
  changed_when: false
  when: show_detailed_output | default(false) | bool

- name: Check version
  shell: "{{ package_item.version_check_cmd }}"
  register: version_check
  changed_when: false
  failed_when: false
  when: package_item.version_check_cmd is defined