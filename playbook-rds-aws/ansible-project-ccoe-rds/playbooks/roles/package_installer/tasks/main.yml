---
- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ temp_download_dir }}"
  when: temp_download_dir is defined

# First attempt to clean yum cache to prevent online repository checks
- name: Clean yum cache to ensure offline operation
  command: yum clean all
  changed_when: false
  ignore_errors: true

# First attempt to install using package module
- name: Try installing packages with yum (offline mode) - first attempt
  include_tasks: install_with_package.yml
  loop: "{{ packages | selectattr('type', 'equalto', 'rpm') | list }}"
  loop_control:
    loop_var: package_item

# If package module fails, try rpm command as fallback
- name: Try installing packages with rpm command (offline fallback)
  include_tasks: install_with_rpm.yml
  loop: "{{ packages | selectattr('type', 'equalto', 'rpm') | list }}"
  loop_control:
    loop_var: package_item

# Process TGZ packages (these usually don't have dependencies)
- name: Process TGZ packages
  include_tasks: process_tgz.yml
  loop: "{{ packages | selectattr('type', 'equalto', 'tgz') | list }}"
  loop_control:
    loop_var: package_item

- name: Generate summary message
  set_fact:
    installation_summary: "Installation completed for {{ packages | length }} packages"

- name: Display installation summary
  debug:
    msg: "{{ installation_summary }}"