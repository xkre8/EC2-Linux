---
- block:
    - name: Download tarball package if URL is provided
      get_url:
        url: "{{ package_item.url }}"
        dest: "{{ temp_download_dir }}/{{ package_item.file }}"
        mode: '0644'
      register: download_result
      when: package_item.url is defined
  rescue:
    - name: Report download failure
      fail:
        msg: "Failed to download {{ package_item.file }} from {{ package_item.url }}"

- name: Set source path for local package
  set_fact:
    package_source_path: "{{ package_item.source_dir | default(packages[0].source_dir) }}/{{ package_item.file }}"
  when: package_item.url is not defined

- name: Set source path for downloaded package
  set_fact:
    package_source_path: "{{ temp_download_dir }}/{{ package_item.file }}"
  when: package_item.url is defined

- name: Check if tarball file exists
  stat:
    path: "{{ package_source_path }}"
  register: tgz_file_check

- name: Fail if tarball file does not exist
  fail:
    msg: "Tarball file {{ package_source_path }} does not exist!"
  when: not tgz_file_check.stat.exists

- name: Create extract directory if specified
  file:
    path: "{{ package_item.extract_path }}"
    state: directory
    mode: '0755'
  when: package_item.extract_path is defined

- name: Extract tarball package
  unarchive:
    src: "{{ package_source_path }}"
    dest: "{{ package_item.extract_path | default('/opt') }}"
    remote_src: yes
    creates: "{{ package_item.creates | default(omit) }}"
  register: extract_result

- name: Get information about extracted files
  shell: |
    echo "===== PACKAGE INFORMATION ====="
    echo "Name: {{ package_item.name }}"
    echo "File: {{ package_item.file }}"
    echo "Extracted to: {{ package_item.extract_path | default('/opt') }}"
    echo ""
    echo "===== EXTRACTED FILES ====="
    find {{ package_item.extract_path | default('/opt') }} -type f -name "*{{ package_item.name }}*" | head -10
    COUNT=$(find {{ package_item.extract_path | default('/opt') }} -type f -name "*{{ package_item.name }}*" | wc -l)
    if [ $COUNT -gt 10 ]; then
      echo "... and $(( $COUNT - 10 )) more files"
    fi
    echo ""
  register: package_info
  changed_when: false
  when: show_detailed_output | bool

# ตรวจสอบเวอร์ชันของแพ็คเกจ
- name: Include version check
  include_tasks: check_version.yml