---
# roles/db_connectors/tasks/main.yml
- name: Create log directory
  file:
    path: /var/log/ansible/db_connectors
    state: directory
    mode: '0755'
  become: true

- name: Set timestamp for log
  set_fact:
    timestamp: "{{ ansible_date_time.iso8601 }}"

- name: Create log file
  file:
    path: "/var/log/ansible/db_connectors/install_{{ timestamp | regex_replace(':', '-') }}.log"
    state: touch
    mode: '0644'
  become: true
  register: log_file

- name: Add log header
  lineinfile:
    path: "{{ log_file.path }}"
    line: "=== Database Connectors Installation Log ({{ timestamp }}) ==="
    create: yes
  become: true

# MariaDB Connector ODBC Installation
- name: Install MariaDB Connector ODBC
  yum:
    name: /tmp/aws-rds/mariadb-connector-odbc-3.2.5-1.el9.x86_64.rpm
    state: present
    disable_gpg_check: yes
  become: true
  register: mariadb_install

- name: Log MariaDB Connector ODBC installation result
  lineinfile:
    path: "{{ log_file.path }}"
    line: "MariaDB Connector ODBC installation result: {{ 'SUCCESS' if mariadb_install.changed else 'FAILED or ALREADY INSTALLED' }}"
  become: true

- name: Check MariaDB Connector ODBC version
  shell: rpm -q mariadb-connector-odbc
  register: mariadb_version
  failed_when: false
  changed_when: false
  become: true

- name: Log MariaDB Connector ODBC version
  lineinfile:
    path: "{{ log_file.path }}"
    line: "MariaDB Connector ODBC version: {{ mariadb_version.stdout }}"
  become: true

# MongoDB Shell Installation
- name: Extract MongoDB Shell
  unarchive:
    src: /tmp/aws-rds/mongosh-2.5.0-linux-x64-openssl3.tgz
    dest: /tmp
    remote_src: yes
  become: true
  register: mongosh_extract

- name: Log MongoDB Shell extraction result
  lineinfile:
    path: "{{ log_file.path }}"
    line: "MongoDB Shell extraction result: {{ 'SUCCESS' if mongosh_extract.changed else 'FAILED or ALREADY EXTRACTED' }}"
  become: true

- name: Copy MongoDB Shell binary to /usr/local/bin
  copy:
    src: /tmp/mongosh-2.5.0-linux-x64-openssl3/bin/mongosh
    dest: /usr/local/bin/mongosh
    mode: '0755'
    remote_src: yes
  become: true
  register: mongosh_copy

- name: Log MongoDB Shell installation result
  lineinfile:
    path: "{{ log_file.path }}"
    line: "MongoDB Shell installation result: {{ 'SUCCESS' if mongosh_copy.changed else 'FAILED or ALREADY INSTALLED' }}"
  become: true

- name: Check MongoDB Shell version
  shell: mongosh --version
  register: mongosh_version
  failed_when: false
  changed_when: false
  become: true

- name: Log MongoDB Shell version
  lineinfile:
    path: "{{ log_file.path }}"
    line: "MongoDB Shell version: {{ mongosh_version.stdout }}"
  become: true

# MySQL Shell Installation
- name: Install MySQL Shell
  yum:
    name: /tmp/aws-rds/mysql-shell-8.4.5-1.el9.x86_64.rpm
    state: present
    disable_gpg_check: yes
  become: true
  register: mysql_shell_install

- name: Log MySQL Shell installation result
  lineinfile:
    path: "{{ log_file.path }}"
    line: "MySQL Shell installation result: {{ 'SUCCESS' if mysql_shell_install.changed else 'FAILED or ALREADY INSTALLED' }}"
  become: true

- name: Check MySQL Shell version
  shell: rpm -q mysql-shell
  register: mysql_shell_version
  failed_when: false
  changed_when: false
  become: true

- name: Log MySQL Shell version
  lineinfile:
    path: "{{ log_file.path }}"
    line: "MySQL Shell version: {{ mysql_shell_version.stdout }}"
  become: true

# Oracle Instant Client Installation
- name: Install Oracle Instant Client
  yum:
    name: /tmp/aws-rds/oracle-instantclient-basic-23.7.0.25.01-1.el9.x86_64.rpm
    state: present
    disable_gpg_check: yes
  become: true
  register: oracle_client_install

- name: Log Oracle Instant Client installation result
  lineinfile:
    path: "{{ log_file.path }}"
    line: "Oracle Instant Client installation result: {{ 'SUCCESS' if oracle_client_install.changed else 'FAILED or ALREADY INSTALLED' }}"
  become: true

- name: Check Oracle Instant Client version
  shell: rpm -q oracle-instantclient-basic
  register: oracle_client_version
  failed_when: false
  changed_when: false
  become: true

- name: Log Oracle Instant Client version
  lineinfile:
    path: "{{ log_file.path }}"
    line: "Oracle Instant Client version: {{ oracle_client_version.stdout }}"
  become: true

- name: Log installation completion
  lineinfile:
    path: "{{ log_file.path }}"
    line: "=== Installation completed at {{ ansible_date_time.iso8601 }} ==="
  become: true

- name: Print installation summary
  debug:
    msg: 
      - "Installation Summary:"
      - "- MariaDB Connector ODBC: {{ mariadb_version.stdout | default('Not installed') }}"
      - "- MongoDB Shell: {{ mongosh_version.stdout | default('Not installed') }}"
      - "- MySQL Shell: {{ mysql_shell_version.stdout | default('Not installed') }}"
      - "- Oracle Instant Client: {{ oracle_client_version.stdout | default('Not installed') }}"
      - "Log file created at: {{ log_file.path }}"